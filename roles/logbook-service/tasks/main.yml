- name: 'Clone {{ workspace_git }}'
  ansible.builtin.git:
    repo: '{{ workspace_git }}'
    dest: '{{ workspace_dir }}'
    version: '{{ workspace_git_version }}'
  register: workspace_gitresult

- name: 'Prepare {{ logbook_manifest }}'
  block:
  - name: 'Clone {{ logbook_git }}'
    ansible.builtin.git:
      repo: '{{ logbook_git }}'
      dest: '{{ logbook_dir }}'
      version: main
    register: logbook_gitresult

  - name: 'Clone {{ postgres_database_git }}'
    ansible.builtin.git:
      repo: '{{ postgres_database_git }}'
      dest: '{{ postgres_database_dir }}'
      version: '{{ postgres_database_git_version }}'
  
  - name: 'Build {{ logbook_manifest }} image'
    containers.podman.podman_image:
      name: '{{ logbook_manifest }}'
      tag: '{{ logbook_gitresult.after }}'
      path: '{{ workspace_dir }}'
      push: yes
      push_args:
        dest: '{{ container_registry }}'
      validate_certs: no
      build:
        extra_args: '--file {{ logbook_dir }}/Dockerfile'

- name: 'Prepare {{ frontend_manifest }}'
  block:
  - name: 'Clone {{ frontend_git }}'
    ansible.builtin.git:
      repo: '{{ frontend_git }}'
      dest: '{{ frontend_dir }}'
      version: '{{ frontend_git_version }}'
    register: frontend_gitresult

  - name: 'Build {{ frontend_manifest }} image'
    containers.podman.podman_image:
      name: '{{ frontend_manifest }}'
      tag: '{{ frontend_gitresult.after }}'
      path: '{{ frontend_dir }}'
      push: yes
      push_args:
        dest: '{{ container_registry }}'
      validate_certs: no

- name: Apply Deployment manifest to the cluster
  kubernetes.core.k8s:
    state: present
    template: k8s/deployment.yml.j2

- name: Apply Service manifest to the cluster
  kubernetes.core.k8s:
    state: present
    template: k8s/service.yml.j2

- name: Apply Ingress manifest to the cluster
  kubernetes.core.k8s:
    state: present
    template: k8s/ingress.yml.j2