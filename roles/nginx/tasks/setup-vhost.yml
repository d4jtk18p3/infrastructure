- name: create '/var/www/{{ vhost }}/html'
  file:
    path: '{{ root_dir }}/var/www/{{ vhost }}/html'
    state: directory
- name: 'check if /etc/letsencrypt/live/{{ vhost }} exists'
  stat:
    path: '{{ root_dir }}/etc/letsencrypt/live/{{ vhost }}'
  become: yes
  register: ssl_cert_path
- name: 'setup letsencrypt SSL/TLS for {{ vhost }}'
  block:
    - import_tasks: setup-server-block.yml
      vars:
        certbot_setup: True
    - name: run certbot
      docker_container:
        name: proyek3-certbot
        image: certbot/certbot
        state: started
        recreate: yes
        network_mode: '{{ docker_bridge_network }}'
        mounts:
          - source: '{{ root_dir }}/etc/letsencrypt'
            target: /etc/letsencrypt
            type: bind
          - source: '{{ root_dir }}/var/lib/letsencrypt'
            target: /var/lib/letsencrypt
            type: bind
          - source: '{{ root_dir }}/var/www'
            target: /var/www
            type: bind
        command:
          - certonly
          - --webroot
          - '--webroot-path=/var/www/{{ vhost }}/html'
          - '--email {{ maintainer_email }}'
          - --agree-tos
          - --no-eff-email
          - --staging
          - '-d {{ vhost }}'
      register: certbot_result
    - name: wait for certbot to complete
      become: yes
      wait_for:
        path: '{{ root_dir }}/etc/letsencrypt/live/{{ vhost }}/privkey.pem'
  when: not ssl_cert_path.stat.exists
- import_tasks: setup-server-block.yml
  vars:
    certbot_setup: False
