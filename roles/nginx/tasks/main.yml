- name: 'clone {{ working_git }}'
  ansible.builtin.git:
    repo: '{{ working_git }}'
    dest: '{{ working_dir }}'
    version: staging
- name: create /etc/letsencrypt
  file:
    path: '{{ root_dir }}/etc/letsencrypt'
    state: directory
- name: create /var/lib/letsencrypt
  file:
    path: '{{ root_dir }}/var/lib/letsencrypt'
    state: directory
- name: create /var/www
  file:
    path: '{{ root_dir }}/var/www'
    state: directory
- name: create /etc/nginx/sites-enabled
  file:
    path: '{{ root_dir }}/etc/nginx/sites-enabled'
    state: directory
- name: create proyek3-nginx
  docker_container:
    name: proyek3-nginx
    image: nginx:1-alpine
    state: present
    restart_policy: unless-stopped
    network_mode: '{{ docker_bridge_network }}'
    networks:
      - name: '{{ docker_bridge_network }}'
        ipv4_address: '{{ docker_ipv4_address_nginx }}'
    mounts:
      - source: '{{ root_dir }}/etc/letsencrypt'
        target: /etc/letsencrypt
        type: bind
      - source: '{{ root_dir }}/var/lib/letsencrypt'
        target: /var/lib/letsencrypt
        type: bind
      - source: '{{ working_dir }}/nginx.conf'
        target: /etc/nginx/nginx.conf
        type: bind
      - source: '{{ root_dir }}/etc/nginx/sites-enabled'
        target: /etc/nginx/sites-enabled
        type: bind
      - source: '{{ root_dir }}/var/www'
        target: /var/www
        type: bind
    ports:
      - '80:80'
      - '443:443'
- name: configure vhost if the vars exists
  vars:
    ipv4_address: '{{ docker_ipv4_address_keycloak }}'
  block:
    - name: create '/var/www/{{ vhost }}/html'
      file:
        path: '{{ root_dir }}/var/www/{{ vhost }}/html'
        state: directory
    - name: 'check if /etc/letsencrypt/live/{{ vhost }} exists'
      stat:
        path: '{{ root_dir }}/etc/letsencrypt/live/{{ vhost }}'
      become: yes
      register: ssl_cert_path
    - import_tasks: setup-vhost.yml
      vars:
        certbot_setup: True
      when: not ssl_cert_path.stat.exists
    - import_tasks: setup-vhost.yml
      vars:
        certbot_setup: False
  when: vhost is defined
